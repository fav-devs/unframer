// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 080b0b6d577bdc21 "Unframer Simplicity demo", do not edit manually */
"use client";

/**
 * @typedef Locale
 * A string that represents the locale.
 */

/**
 * @typedef Props
 * @property {React.ReactNode} [children] - The children components.
 * @property {Locale} [locale] - The active locale.
 * @property {React.CSSProperties} [style] - The component styles.
 * @property {string} [className] - Additional class names for the component.
 * @property {string} [id] - The component id.
 * @property {*} [width] - The component width.
 * @property {*} [height] - The component height.
 * @property {string} [layoutId] - The layout id.
 * @property {'Variant 1' | 'Variant 2' | 'Variant 3'} [variant] - The component responsive variant; values: Variant 1 | Variant 2 | Variant 3.
 * @property {'Variant 1' | 'Variant 2' | 'Variant 3'} [variant] - Variant
 */

/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */
import { stdin_default } from "../chunks/chunk-BPH5BCDR.js";

// virtual:sections/features-animation
import { Fragment } from "react";
import { ContextProviders } from "unframer";
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
  base: "I6854:8695;6765:3116"
};
/** @type {function(Props): any} */
function ComponentWithRoot({
  locale,
  ...rest
}) {
  return <ContextProviders routes={{
    E9iSo0Hog: {
      path: "/docs"
    },
    TdQ_ISe7W: {
      path: "/404"
    },
    YC1NE44pE: {
      path: "/terms"
    },
    augiA20Il: {
      path: "/"
    },
    jg9o0Jk8V: {
      path: "/privacy"
    },
    rHzp0yyuW: {
      path: "/blog-3"
    }
  }} framerSiteId={"080b0b6d577bdc210bd0cd32f7edde6108e985399928f17be1208fac1508931c"} locale={locale} locales={locales}>
			{jsx(stdin_default, {
      ...rest
    })}
		</ContextProviders>;
}
/**
 * Renders FeaturesAnimationFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @memberof FeaturesAnimationFramerComponent
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({
  locale,
  ...rest
}) => {
  return <ContextProviders routes={{
    E9iSo0Hog: {
      path: "/docs"
    },
    TdQ_ISe7W: {
      path: "/404"
    },
    YC1NE44pE: {
      path: "/terms"
    },
    augiA20Il: {
      path: "/"
    },
    jg9o0Jk8V: {
      path: "/privacy"
    },
    rHzp0yyuW: {
      path: "/blog-3"
    }
  }} framerSiteId={"080b0b6d577bdc210bd0cd32f7edde6108e985399928f17be1208fac1508931c"} locale={locale} locales={locales}>
			<WithFramerBreakpoints Component={stdin_default} variants={defaultResponsiveVariants} {...rest} />
		</ContextProviders>;
};
Object.assign(ComponentWithRoot, stdin_default);
var features_animation_default = ComponentWithRoot;
export { features_animation_default as default };